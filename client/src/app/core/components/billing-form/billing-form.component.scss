@use 'breakpoints' as bp;

h1 {
  margin-bottom: 1.5rem;

  @include bp.md {
    margin-bottom: 3rem;
  }
}

form {
  display: grid;
  grid-gap: 2.5rem;

  @include bp.md {
    grid-gap: 3rem;
  }
}

fieldset {
  padding: 0;
  border: 0;
}

legend {
  margin-bottom: 1.5rem;
  font-weight: bold;
  color: var(--primary);
  text-transform: capitalize;
}

label {
  color: var(--label-foreground);
  text-transform: capitalize;
}

input,
select {
  box-sizing: border-box;
  width: 100%;
  padding: 1rem 1.25rem;
  font-weight: bold;
  color: var(--base);
  background-color: var(--background-secondary);
  border: 1px solid var(--input-inner-border);
  border-radius: 0.25rem;
  caret-color: var(--primary);
  outline: none;

  &:focus {
    border-color: var(--primary);
  }
}

.form-group {
  display: grid;
  grid-gap: 1.5rem;
}

.form-subgroup {
  display: flex;
  flex-direction: column;
  gap: 0.625rem;
}

.client-initials {
  margin-bottom: 1.5rem;
}

.sender-address {
  display: grid;
  grid-template-areas:
    'street street'
    'city postCode'
    'country country';

  .street {
    grid-area: street;
  }

  .city {
    grid-area: city;
  }

  .post-code {
    grid-area: postCode;
  }

  .country {
    grid-area: country;
  }

  @include bp.md {
    grid-template-areas:
      'street street street'
      'city postCode country';
  }
}

.client-address {
  :not(.city, .post-code) {
    grid-column: span 2;
  }

  @include bp.md {
    grid-template-columns: 1fr 1fr 1fr;

    :not(.city, .post-code, .country) {
      grid-column: span 3;
    }

    .form-subgroup.country {
      grid-column: span 1;
    }
  }
}

.conditions {
  display: grid;

  @include bp.md {
    .project-description {
      grid-column: span 2;
    }
  }
}
