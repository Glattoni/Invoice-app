@use 'breakpoints' as bp;

h1 {
  margin-bottom: 1.5rem;

  @include bp.md {
    margin-bottom: 3rem;
  }
}

form {
  display: grid;
  grid-gap: 2.5rem;

  @include bp.md {
    grid-gap: 3rem;
  }
}

.form-container {
  height: 100%;
  padding-right: 1rem;
  overflow-y: scroll;
}

fieldset:last-child {
  padding-bottom: 5.5rem;
}

legend {
  margin-bottom: 1.5rem;
  font-weight: bold;
  color: var(--primary);
  text-transform: capitalize;

  &.legend-title {
    font-size: 1.125rem;
    line-height: 2rem;
    color: var(--items-list);
    letter-spacing: -0.375px;

    @include bp.md {
      margin-bottom: 1rem;
    }
  }
}

label {
  color: var(--label-foreground);
  text-transform: capitalize;
}

input,
select {
  box-sizing: border-box;
  width: 100%;
  padding: 1rem 1.25rem;
  font-weight: bold;
  color: var(--base);
  background-color: var(--background-secondary);
  border: 1px solid var(--input-inner-border);
  border-radius: 0.25rem;
  caret-color: var(--primary);
  outline: none;

  &:focus {
    border-color: var(--primary);
  }
}

.fields-container {
  display: grid;
  grid-gap: 1.5rem;
}

.form-field {
  display: flex;
  flex-direction: column;
  gap: 0.625rem;

  .item-total {
    padding: 1rem 0;
    font-weight: bold;
    color: var(--foreground-primary);
  }
}

.client-initials {
  margin-bottom: 1.5rem;
}

.sender {
  display: grid;
  grid-template-columns: 1fr 1fr;

  &-street,
  &-country {
    grid-column: span 2;
  }

  @include bp.md {
    grid-template-columns: repeat(3, 1fr);

    &-street {
      grid-column: span 3;
    }

    &-country {
      grid-column: span 1;
    }
  }
}

.client {
  &-street,
  &-country {
    grid-column: span 2;
  }

  @include bp.md {
    grid-template-columns: repeat(3, 1fr);

    &-street {
      grid-column: span 3;
    }

    &-country {
      grid-column: span 1;
    }
  }
}

.conditions {
  display: grid;

  @include bp.md {
    .project-description {
      grid-column: span 2;
    }
  }
}

.list {
  display: grid;
  grid-gap: 3rem;

  &-thead {
    display: none;
    color: var(--label-foreground);
    text-transform: capitalize;

    @include bp.md {
      display: grid;
      grid-template-columns: 12.5rem 2.875rem 6.25rem auto;
      grid-gap: 1rem;
    }
  }

  @include bp.md {
    grid-gap: 1.125rem;
  }
}

.list-item {
  display: grid;
  grid-gap: 1.5rem 1rem;

  .form-field:first-child {
    grid-column: span 4;

    @include bp.md {
      grid-column: span 1;
    }
  }

  button {
    max-height: 2rem;
    padding: 0.5rem 0.625rem;
    margin-bottom: 0.5rem;
  }

  div:nth-child(2) {
    max-width: 4rem;
  }

  div:nth-child(4) {
    min-width: 5.25rem;
    overflow: hidden;
    text-overflow: ellipsis;

    @include bp.md {
      min-width: unset;
    }
  }

  @include bp.md {
    grid-template-columns: 12.5rem 2.875rem 6.25rem auto 2rem;
    grid-gap: 1rem;

    .form-field label {
      display: none;
    }
  }
}

.delete-button {
  display: flex;
  align-items: flex-end;
}

.add-button {
  display: block;

  ::ng-deep button {
    width: 100%;
    text-transform: capitalize;
  }

  @include bp.md {
    margin-top: 1.5rem;
  }
}

.items-list {
  padding-bottom: 11rem;

  @include bp.md {
    padding-bottom: 9.125rem;
  }
}

.panel {
  position: fixed;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  justify-content: space-between;
  padding: 1.25rem 1.5rem;
  background-color: var(--background-quaternary);
  box-shadow: 0 -2.5rem 4.25rem 0 var(--box-shadow-primary);

  @include bp.md {
    padding: 2rem 3.125rem 2rem 4rem;
    border-bottom-right-radius: 1.25rem;
    box-shadow: none;
  }

  &-right {
    display: flex;
    gap: 0.5rem;
  }

  &.accent {
    background-color: var(--background-quaternary);
    box-shadow: 0 -2.5rem 4.25rem 0 var(--box-shadow-primary);

    @include bp.md {
      border-radius: 0 1.25rem 1.25rem 0;
    }
  }
}
